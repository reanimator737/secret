/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Pool, PoolInterface } from "../Pool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "GenerateNewPost",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lifeTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_secret",
        type: "bytes32",
      },
    ],
    name: "createNewPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalLikes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalOwnerLikes",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "likes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasOwnerLike",
            type: "bool",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct Pool.UserActivity[]",
        name: "_userActivity",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_postId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200139d3803806200139d8339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b611273806200012a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633911dd571461003b578063f37a7adf14610057575b600080fd5b610055600480360381019061005091906108e7565b610073565b005b610071600480360381019061006c9190610b92565b61053c565b005b6154608210156100b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100af90610cac565b60405180910390fd5b62093a808211156100fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f590610d3e565b60405180910390fd5b60008311610141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013890610daa565b60405180910390fd5b8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161019b9190610dd9565b602060405180830381865afa1580156101b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dc9190610e09565b101561021d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021490610e82565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161027b929190610ea2565b602060405180830381865afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc9190610e09565b905083811015610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f890610f17565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161035e93929190610f46565b600060405180830381600087803b15801561037857600080fd5b505af115801561038c573d6000803e3d6000fd5b5050505060018060008282546103a29190610fac565b925050819055506040518060a0016040528085815260200160001515815260200142815260200142856103d59190610fac565b815260200183815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908315150217905550604082015181600201556060820151816003015560808201518160040155905050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060015490806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff166001547f916f23c67e121a6d4e00bf9435b5c795560180fdd0f1a2db3644c8a2efca6216868560405161052e929190610fef565b60405180910390a350505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900460ff16151515158152602001600282015481526020016003820154815260200160048201548152505090508060200151610622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061990611064565b60405180910390fd5b80606001514282604001516106379190611084565b10610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066e90611104565b60405180910390fd5b600060056002886106889190611153565b116106945760056106a2565b6002876106a19190611153565b5b9050600086826106b29190611184565b886106bd9190610fac565b90506001600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060005b865181101561085c57600087828151811061074c5761074b6111c6565b5b602002602001015160200151610763576000610765565b835b888381518110610778576107776111c6565b5b60200260200101516000015161078e9190610fac565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8984815181106107df576107de6111c6565b5b6020026020010151604001513086856107f89190611153565b6040518463ffffffff1660e01b815260040161081693929190610f46565b600060405180830381600087803b15801561083057600080fd5b505af1158015610844573d6000803e3d6000fd5b50505050508080610854906111f5565b91505061072e565b505050505050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61088e8161087b565b811461089957600080fd5b50565b6000813590506108ab81610885565b92915050565b6000819050919050565b6108c4816108b1565b81146108cf57600080fd5b50565b6000813590506108e1816108bb565b92915050565b600080600060608486031215610900576108ff610871565b5b600061090e8682870161089c565b935050602061091f8682870161089c565b9250506040610930868287016108d2565b9150509250925092565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109888261093f565b810181811067ffffffffffffffff821117156109a7576109a6610950565b5b80604052505050565b60006109ba610867565b90506109c6828261097f565b919050565b600067ffffffffffffffff8211156109e6576109e5610950565b5b602082029050602081019050919050565b600080fd5b600080fd5b60008115159050919050565b610a1681610a01565b8114610a2157600080fd5b50565b600081359050610a3381610a0d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6482610a39565b9050919050565b610a7481610a59565b8114610a7f57600080fd5b50565b600081359050610a9181610a6b565b92915050565b600060608284031215610aad57610aac6109fc565b5b610ab760606109b0565b90506000610ac78482850161089c565b6000830152506020610adb84828501610a24565b6020830152506040610aef84828501610a82565b60408301525092915050565b6000610b0e610b09846109cb565b6109b0565b90508083825260208201905060608402830185811115610b3157610b306109f7565b5b835b81811015610b5a5780610b468882610a97565b845260208401935050606081019050610b33565b5050509392505050565b600082601f830112610b7957610b7861093a565b5b8135610b89848260208601610afb565b91505092915050565b600080600080600060a08688031215610bae57610bad610871565b5b6000610bbc8882890161089c565b9550506020610bcd8882890161089c565b945050604086013567ffffffffffffffff811115610bee57610bed610876565b5b610bfa88828901610b64565b9350506060610c0b88828901610a82565b9250506080610c1c8882890161089c565b9150509295509295909350565b600082825260208201905092915050565b7f506f7374206d75737420657869737420666f72206174206c656173742036206860008201527f6f75727300000000000000000000000000000000000000000000000000000000602082015250565b6000610c96602483610c29565b9150610ca182610c3a565b604082019050919050565b60006020820190508181036000830152610cc581610c89565b9050919050565b7f506f7374206d75737420626520636c6f736564206e6f206c617465722074686160008201527f6e20372064617973000000000000000000000000000000000000000000000000602082015250565b6000610d28602883610c29565b9150610d3382610ccc565b604082019050919050565b60006020820190508181036000830152610d5781610d1b565b9050919050565b7f496e636f72726563742076616c75650000000000000000000000000000000000600082015250565b6000610d94600f83610c29565b9150610d9f82610d5e565b602082019050919050565b60006020820190508181036000830152610dc381610d87565b9050919050565b610dd381610a59565b82525050565b6000602082019050610dee6000830184610dca565b92915050565b600081519050610e0381610885565b92915050565b600060208284031215610e1f57610e1e610871565b5b6000610e2d84828501610df4565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b6000610e6c601183610c29565b9150610e7782610e36565b602082019050919050565b60006020820190508181036000830152610e9b81610e5f565b9050919050565b6000604082019050610eb76000830185610dca565b610ec46020830184610dca565b9392505050565b7f436865636b20616c6c6f77616e63650000000000000000000000000000000000600082015250565b6000610f01600f83610c29565b9150610f0c82610ecb565b602082019050919050565b60006020820190508181036000830152610f3081610ef4565b9050919050565b610f408161087b565b82525050565b6000606082019050610f5b6000830186610dca565b610f686020830185610dca565b610f756040830184610f37565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fb78261087b565b9150610fc28361087b565b9250828201905080821115610fda57610fd9610f7d565b5b92915050565b610fe9816108b1565b82525050565b60006040820190506110046000830185610f37565b6110116020830184610fe0565b9392505050565b7f416c72656164792077697468647261776e000000000000000000000000000000600082015250565b600061104e601183610c29565b915061105982611018565b602082019050919050565b6000602082019050818103600083015261107d81611041565b9050919050565b600061108f8261087b565b915061109a8361087b565b92508282039050818111156110b2576110b1610f7d565b5b92915050565b7f546f6f206c6974746c652074696d652068617320706173736564000000000000600082015250565b60006110ee601a83610c29565b91506110f9826110b8565b602082019050919050565b6000602082019050818103600083015261111d816110e1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061115e8261087b565b91506111698361087b565b92508261117957611178611124565b5b828204905092915050565b600061118f8261087b565b915061119a8361087b565b92508282026111a88161087b565b915082820484148315176111bf576111be610f7d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006112008261087b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361123257611231610f7d565b5b60018201905091905056fea264697066735822122071e4340cfde75e30b2fe45ec641a1e4acc820c735def943ad3411b122b1cae6964736f6c63430008120033";

type PoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pool__factory extends ContractFactory {
  constructor(...args: PoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Pool> {
    return super.deploy(_tokenAddress, overrides || {}) as Promise<Pool>;
  }
  override getDeployTransaction(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  override attach(address: string): Pool {
    return super.attach(address) as Pool;
  }
  override connect(signer: Signer): Pool__factory {
    return super.connect(signer) as Pool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolInterface {
    return new utils.Interface(_abi) as PoolInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pool {
    return new Contract(address, _abi, signerOrProvider) as Pool;
  }
}
